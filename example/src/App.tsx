import React, { useState } from 'react';
import useForm from './src';
import Setting from './Setting';
import { Animate } from 'react-simple-animate';
import './App.css';

function App() {
  const [submitData, updateSubmitData] = useState({});
  const [showSetting, toggleSetting] = useState(false);
  const [setting, setConfig] = useState({
    mode: 'onChange',
    showError: true,
    showWatch: true,
    showSubmit: true,
  })
  const { register, errors, prepareSubmit, watch } = useForm({
    mode: 'onChange',
  });

  const onSubmit = data => {
    updateSubmitData(data);
  };

  return (
    <div className="App">
      <h1 className="App-h1">ðŸ“‹ React Forme</h1>
      <p
        style={{
          marginBottom: '40px',
        }}
      >
        Performance, flexible and extensible forms with easy to use feedback for validation.
      </p>

      <Animate
        play={showSetting}
        easeType="ease-in"
        endStyle={{
          transform: 'translateX(0)',
        }}
        startStyle={{
          transform: 'translateX(500px)',
        }}
        render={({style}) => <Setting toggleSetting={toggleSetting} style={style} />}
      />

      <div className="App-setting" tabIndex={0} onClick={() => toggleSetting(!showSetting)}>
        <svg viewBox="0 0 100 110">
          <g>
            <path
              fill="none"
              d="M50.002,28.61c-0.005,0-0.009,0-0.013,0c-5.715,0.004-11.086,2.232-15.123,6.274    c-4.036,4.042-6.257,9.415-6.252,15.128c0.003,5.715,2.23,11.086,6.272,15.123C38.924,69.169,44.291,71.39,50,71.39    c0.006,0,0.011,0,0.017,0c11.791-0.008,21.38-9.611,21.374-21.408c0-5.712-2.228-11.08-6.273-15.118    C61.077,30.83,55.709,28.61,50.002,28.61z"
            />
            <path
              fill="none"
              d="M89.131,44.115c0,0-0.001,0-0.002,0l-3.63,0.003c0,0,0,0-0.001,0c-0.688,0-1.282-0.484-1.422-1.159    c-0.894-4.333-2.589-8.408-5.036-12.11c-0.381-0.576-0.304-1.339,0.184-1.827l2.574-2.573c1.15-1.157,1.147-3.04-0.011-4.196    l-4.085-4.084c-0.557-0.554-1.302-0.86-2.098-0.86c0,0-0.001,0-0.002,0c-0.793,0-1.533,0.305-2.083,0.86l-2.583,2.581    c-0.487,0.486-1.25,0.564-1.825,0.184c-3.714-2.449-7.792-4.139-12.122-5.023c-0.676-0.138-1.161-0.732-1.161-1.422v-3.628    c0-1.63-1.33-2.957-2.965-2.958h-5.778c-1.633,0.002-2.963,1.333-2.963,2.967v3.63c0,0.688-0.483,1.282-1.157,1.421    c-4.335,0.897-8.413,2.593-12.119,5.042c-0.576,0.38-1.342,0.301-1.828-0.187l-2.568-2.578c-1.156-1.147-3.037-1.145-4.188,0.01    L18.167,22.3c-0.555,0.556-0.86,1.299-0.859,2.093c0.001,0.795,0.31,1.538,0.868,2.093l2.577,2.575    c0.488,0.487,0.565,1.25,0.185,1.826c-2.441,3.7-4.131,7.777-5.025,12.12c-0.139,0.675-0.733,1.159-1.421,1.159l-3.624,0.001    c-1.634,0.002-2.964,1.333-2.964,2.968l0.006,5.781c0.004,1.633,1.332,2.962,2.96,2.962c0,0,0.001,0,0.002,0l3.632,0.002    c0.688,0,1.281,0.483,1.42,1.157c0.898,4.329,2.595,8.404,5.043,12.112c0.38,0.575,0.303,1.338-0.185,1.826l-2.573,2.573    c-1.153,1.156-1.15,3.036,0.006,4.193l4.09,4.085c1.157,1.153,3.039,1.153,4.193-0.002l2.572-2.577    c0.28-0.282,0.653-0.426,1.028-0.426c0.276,0,0.554,0.078,0.799,0.24c3.719,2.452,7.795,4.143,12.117,5.025    c0.676,0.138,1.161,0.732,1.161,1.422v3.624c0.004,1.631,1.333,2.962,2.964,2.963l5.783-0.003c0.79,0,1.535-0.312,2.098-0.876    c0.561-0.562,0.869-1.303,0.867-2.087c0-0.002,0-0.003,0-0.004v-3.631c0-0.689,0.484-1.282,1.158-1.421    c4.326-0.893,8.401-2.589,12.113-5.041c0.575-0.38,1.341-0.301,1.828,0.186l2.568,2.575c1.157,1.147,3.042,1.145,4.197-0.007    l4.082-4.093c0.559-0.559,0.865-1.303,0.864-2.099c-0.001-0.793-0.308-1.534-0.864-2.086l-2.578-2.578    c-0.487-0.487-0.564-1.249-0.186-1.824c2.444-3.715,4.136-7.794,5.026-12.121c0.139-0.675,0.733-1.159,1.422-1.159h3.624    c1.63-0.002,2.958-1.333,2.958-2.967v-5.788c0-0.784-0.31-1.526-0.874-2.088C90.659,44.424,89.917,44.115,89.131,44.115z     M50.018,74.293c-0.006,0-0.013,0-0.019,0c-6.484,0-12.578-2.522-17.165-7.104c-4.59-4.585-7.12-10.686-7.123-17.176    c-0.006-6.488,2.516-12.59,7.101-17.181c4.584-4.59,10.684-7.121,17.175-7.126c0.005,0,0.01,0,0.015,0    c6.482,0,12.577,2.522,17.167,7.103c4.595,4.586,7.125,10.685,7.125,17.172C74.3,63.377,63.41,74.283,50.018,74.293z"
            />
            <path d="M93.272,42.93c-1.111-1.109-2.582-1.718-4.142-1.718c-0.001,0-0.003,0-0.004,0l-2.466,0.002    c-0.928-3.881-2.458-7.56-4.559-10.964l1.752-1.751c2.28-2.293,2.273-6.016-0.015-8.3l-4.087-4.085    c-1.107-1.101-2.58-1.708-4.148-1.708c-0.001,0-0.002,0-0.003,0c-1.571,0.001-3.042,0.611-4.137,1.712l-1.756,1.754    c-3.414-2.102-7.096-3.629-10.977-4.55v-2.462c0-3.229-2.632-5.858-5.867-5.861h-5.78c-3.234,0.004-5.865,2.637-5.865,5.87v2.467    c-3.883,0.931-7.563,2.462-10.97,4.563l-1.749-1.756c-2.294-2.279-6.015-2.272-8.294,0.014l-4.091,4.09    c-1.105,1.107-1.712,2.58-1.709,4.151c0.003,1.572,0.615,3.044,1.721,4.144l1.75,1.749c-2.096,3.402-3.622,7.084-4.55,10.972    l-2.461,0.001C7.631,41.269,5,43.902,5,47.138l0.006,5.785c0.008,3.232,2.637,5.859,5.861,5.859c0.001,0,0.003,0,0.004,0    l2.468,0.001c0.932,3.879,2.463,7.557,4.565,10.964l-1.75,1.75c-2.283,2.289-2.279,6.012,0.008,8.299l4.092,4.087    c2.29,2.281,6.012,2.279,8.297-0.006l1.749-1.752c3.416,2.104,7.097,3.631,10.971,4.55v2.462c0.008,3.231,2.639,5.861,5.867,5.862    l5.784-0.003c1.566-0.001,3.041-0.614,4.152-1.729c1.109-1.112,1.718-2.584,1.714-4.144V86.66    c3.875-0.927,7.554-2.458,10.965-4.562l1.748,1.753c2.293,2.276,6.015,2.27,8.301-0.009l4.082-4.093    c1.108-1.107,1.716-2.583,1.713-4.156c-0.002-1.571-0.614-3.042-1.718-4.137l-1.751-1.751c2.099-3.414,3.625-7.094,4.55-10.971    h2.462C92.372,58.729,95,56.095,95,52.862v-5.788C95,45.512,94.387,44.04,93.272,42.93z M92.097,52.862    c0,1.634-1.327,2.966-2.958,2.967h-3.624c-0.689,0-1.283,0.484-1.422,1.159c-0.89,4.327-2.581,8.406-5.026,12.121    c-0.378,0.575-0.301,1.337,0.186,1.824l2.578,2.578c0.556,0.552,0.863,1.293,0.864,2.086c0.001,0.796-0.305,1.54-0.864,2.099    l-4.082,4.093c-1.156,1.152-3.041,1.154-4.197,0.007l-2.568-2.575c-0.487-0.488-1.253-0.566-1.828-0.186    c-3.712,2.452-7.787,4.148-12.113,5.041c-0.674,0.139-1.158,0.732-1.158,1.421v3.631c0,0.001,0,0.002,0,0.004    c0.002,0.783-0.306,1.524-0.867,2.087c-0.563,0.564-1.308,0.876-2.098,0.876l-5.783,0.003c-1.63-0.001-2.96-1.332-2.964-2.963    V85.51c0-0.69-0.485-1.284-1.161-1.422c-4.321-0.882-8.398-2.572-12.117-5.025c-0.244-0.162-0.522-0.24-0.799-0.24    c-0.375,0-0.748,0.145-1.028,0.426l-2.572,2.577c-1.153,1.155-3.036,1.155-4.193,0.002l-4.09-4.085    c-1.156-1.157-1.159-3.037-0.006-4.193l2.573-2.573c0.488-0.488,0.565-1.251,0.185-1.826c-2.448-3.707-4.145-7.783-5.043-12.112    c-0.14-0.674-0.733-1.157-1.42-1.157l-3.632-0.002c-0.001,0-0.002,0-0.002,0c-1.628,0-2.956-1.329-2.96-2.962l-0.006-5.781    c0-1.635,1.33-2.967,2.964-2.968l3.624-0.001c0.688,0,1.282-0.484,1.421-1.159c0.894-4.343,2.585-8.42,5.025-12.12    c0.38-0.576,0.302-1.339-0.185-1.826l-2.577-2.575c-0.559-0.556-0.867-1.299-0.868-2.093c-0.001-0.794,0.304-1.538,0.859-2.093    l4.093-4.092c1.151-1.156,3.032-1.158,4.188-0.01l2.568,2.578c0.487,0.489,1.252,0.567,1.828,0.187    c3.707-2.449,7.784-4.145,12.119-5.042c0.674-0.139,1.157-0.733,1.157-1.421v-3.63c0-1.634,1.33-2.965,2.963-2.967h5.778    c1.634,0.001,2.965,1.328,2.965,2.958v3.628c0,0.69,0.485,1.284,1.161,1.422c4.33,0.884,8.408,2.574,12.122,5.023    c0.575,0.38,1.338,0.301,1.825-0.184l2.583-2.581c0.55-0.555,1.29-0.86,2.083-0.86c0.001,0,0.001,0,0.002,0    c0.795,0,1.541,0.306,2.098,0.86l4.085,4.084c1.158,1.156,1.161,3.039,0.011,4.196l-2.574,2.573    c-0.488,0.488-0.565,1.251-0.184,1.827c2.448,3.702,4.142,7.777,5.036,12.11c0.139,0.675,0.733,1.159,1.422,1.159    c0,0,0.001,0,0.001,0l3.63-0.003c0.001,0,0.002,0,0.002,0c0.786,0,1.529,0.309,2.092,0.871c0.564,0.561,0.874,1.303,0.874,2.088    V52.862z" />
            <path d="M50.002,25.706c-0.005,0-0.01,0-0.015,0c-6.491,0.005-12.591,2.536-17.175,7.126c-4.585,4.591-7.106,10.693-7.101,17.181    c0.003,6.49,2.533,12.59,7.123,17.176C37.421,71.77,43.516,74.293,50,74.293c0.006,0,0.013,0,0.019,0    C63.41,74.283,74.3,63.377,74.294,49.981c0-6.487-2.53-12.585-7.125-17.172C62.579,28.229,56.484,25.706,50.002,25.706z     M50.017,71.39c-0.006,0-0.011,0-0.017,0c-5.709,0-11.076-2.221-15.113-6.255c-4.042-4.037-6.269-9.408-6.272-15.123    c-0.005-5.713,2.215-11.086,6.252-15.128c4.037-4.042,9.408-6.27,15.123-6.274c0.004,0,0.009,0,0.013,0    c5.707,0,11.075,2.221,15.115,6.254c4.045,4.038,6.273,9.406,6.273,15.118C71.396,61.778,61.808,71.382,50.017,71.39z" />
          </g>
        </svg>
        Setting
      </div>

      <div
        style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(4, 1fr)',
          gridColumnGap: '25px',
        }}
      >
        <form onSubmit={prepareSubmit(onSubmit)}>
          <code>
            <h2 className="App-h2">Form</h2>
          </code>
          <input name="input" placeholder="input" ref={ref => register({ ref })} />
          <input type="range" name="range" ref={ref => register({ ref })} />
          <input type="date" name="date" ref={ref => register({ ref, required: true })} />
          <input type="datetime-local" name="datetime-local" ref={ref => register({ ref, required: true })} />
          <input type="email" placeholder="email" name="email" ref={ref => register({ ref, required: true })} />
          <input name="inputRequired" placeholder="input required" ref={ref => register({ ref, required: true })} />
          <input
            name="inputMaxLength"
            placeholder="max 8"
            ref={ref => register({ ref, required: true, maxLength: 8 })}
          />
          <input
            type="number"
            name="number"
            placeholder="max 250 min 20"
            ref={ref => register({ ref, required: true, max: 250, min: 20 })}
          />

          <select name="select" ref={ref => register({ ref, required: true })}>
            <option value="">select</option>
            <option value="1">1</option>
            <option value="2">2</option>
          </select>

          <select name="selectMultiple" multiple ref={ref => register({ ref, required: true })}>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
          </select>

          <div className="App-radio-group">
            <label>
              Option 1: <input type="radio" name="radio" value={1} ref={ref => register({ ref, required: true })} />
            </label>
            <label>
              Option 2: <input type="radio" name="radio" value={2} ref={ref => register({ ref, required: true })} />
            </label>
          </div>

          <input type="submit" value="Submit" className="App-submit" />
        </form>

        <code>
          <h2 className="App-h2">Errors</h2>
          <pre
            style={{
              textAlign: 'left',
              padding: '0 20px',
            }}
          >
            {Object.keys(errors).length ? JSON.stringify(errors, null, 2) : ''}
          </pre>
        </code>

        <code>
          <h2 className="App-h2">Watch</h2>
          <pre
            style={{
              textAlign: 'left',
              padding: '0 20px',
            }}
          >
            {JSON.stringify(watch(), null, 2)}
          </pre>
        </code>

        <code>
          <h2 className="App-h2">Prepare Submit</h2>
          <pre
            style={{
              textAlign: 'left',
              padding: '0 20px',
            }}
          >
            {Object.keys(submitData).length ? JSON.stringify(submitData, null, 2) : ''}
          </pre>
        </code>
      </div>
    </div>
  );
}

export default App;
